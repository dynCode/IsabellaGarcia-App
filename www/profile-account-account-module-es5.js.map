{"version":3,"sources":["./src/app/profile/account/account.page.html","./src/app/profile/account/account.module.ts","./src/app/profile/account/account.page.scss","./src/app/profile/account/account.page.ts"],"names":[],"mappings":"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","file":"profile-account-account-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    <ion-title>Account Details</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label>\\n          <p position=\\\"stacked\\\">Your Name</p>\\n          <h2>{{authenticationService.customer.first_name}} {{authenticationService.customer.last_name}}</h2>\\n        </ion-label>\\n        <ion-icon name=\\\"create\\\" slot=\\\"end\\\" (click)=\\\"openWithInAppBrowser()\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>\\n          <p position=\\\"stacked\\\">Email Address</p>\\n          <h2>{{authenticationService.customer.email}}</h2>\\n        </ion-label>\\n        <ion-icon name=\\\"create\\\" slot=\\\"end\\\" (click)=\\\"openWithInAppBrowser()\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>\\n        <p position=\\\"stacked\\\">Password</p>\\n        <h2>*********</h2>\\n      </ion-label>\\n      <ion-icon name=\\\"create\\\" slot=\\\"end\\\" (click)=\\\"openWithInAppBrowser()\\\"></ion-icon>\\n    </ion-item>\\n  </ion-list>\\n      \\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccountPage } from './account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AccountPage]\n})\nexport class AccountPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvYWNjb3VudC9hY2NvdW50LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { InAppBrowser, InAppBrowserOptions } from '@ionic-native/in-app-browser/ngx';\nimport { SpinnerDialog } from '@ionic-native/spinner-dialog/ngx';\nimport { ProductsService } from '../../services/products.service';\nimport {AuthenticationService} from '../../services/authenticate.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.page.html',\n  styleUrls: ['./account.page.scss'],\n})\nexport class AccountPage implements OnInit {\n\n  userData: any;\n  options : InAppBrowserOptions = {\n    location : 'yes',\n    hideurlbar: \"yes\",\n    presentationstyle : 'pagesheet',\n  };\n\n  constructor(public productsService: ProductsService, public authenticationService: AuthenticationService, private storage: Storage,private iab: InAppBrowser,private spinnerDialog: SpinnerDialog) {}\n\n  ngOnInit() {\n    \n    this.authenticationService.getCustomer();\n    setTimeout(() => {\n      console.log(\"Account: \", this.authenticationService.customer);\n    }, 1000);\n\n  }\n\n  public openWithInAppBrowser(){\n    let target = \"_blank\";\n    const browser = this.iab.create(\"https://beta.isabellagarcia.co.za/my-account/edit-account/\",target,this.options);\n    browser.on('loadstart').subscribe((eve) => {\n      this.spinnerDialog.show(null, null, true);     \n    }, err => {\n      this.spinnerDialog.hide();\n    })\n    \n    browser.on('loadstop').subscribe(()=>{\n      this.spinnerDialog.hide();\n    }, err =>{\n      this.spinnerDialog.hide();\n    })\n    \n    browser.on('loaderror').subscribe(()=>{\n      this.spinnerDialog.hide();\n    }, err =>{\n      this.spinnerDialog.hide();\n    })\n    \n    browser.on('exit').subscribe(()=>{\n      this.spinnerDialog.hide();\n    }, err =>{\n      this.spinnerDialog.hide();\n    })\n  }\n\n}\n"],"sourceRoot":""}